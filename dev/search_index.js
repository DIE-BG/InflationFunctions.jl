var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = InflationFunctions","category":"page"},{"location":"#InflationFunctions","page":"Home","title":"InflationFunctions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for InflationFunctions.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [InflationFunctions]","category":"page"},{"location":"#InflationFunctions.InflationFunctions","page":"Home","title":"InflationFunctions.InflationFunctions","text":"InflationFunctions\n\nFunciones para computar estimadores muestrales de inflación. \n\n\n\n\n\n","category":"module"},{"location":"#InflationFunctions.InflationConstant","page":"Home","title":"InflationFunctions.InflationConstant","text":"InflationConstant <: InflationFunction \nInflationConstant(c)\n\nMetodología de inflación constante con valor interanual c. \n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.InflationCoreMai","page":"Home","title":"InflationFunctions.InflationCoreMai","text":"InflationCoreMai{T <: AbstractFloat, B, M <:AbstractMaiMethod} \n    <: InflationFunction\n\nInflationCoreMai(vspace::StepRangeLen{T, B, B}, method::M)\n\nFunción de inflación de la metodología de muestra ampliada implicítamente (MAI). Se parametriza en el tipo flotante T de los datos, B el tipo para representar la precisión de la grilla vspace en el algoritmo de cómputo y el método M de cómputo. \n\nLos métodos de cómputo disponibles son: \n\nMetodología MAI-G: se transforma la distribución ponderada de variaciones intermensuales utilizando la distribución histórica de variaciones intermensuales ponderadas. Se debe dar como argumento el método MaiG.\nMetodología MAI-F: se transforma la distribución de ocurrencias de variaciones intermensuales utilizando la distribución histórica de variaciones intermensuales ponderadas. Se debe dar como argumento el método MaiF.\nMetodología MAI-FP: se transforma la distribución de ocurrencias de variaciones intermensuales utilizando la distribución histórica de variaciones intermensuales equiponderadas. Es un equivalente directo de la metodología MAI-G, reemplazando todas las distribuciones por las versiones de ocurrencias. Se debe dar como argumento el método MaiFP.\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.InflationDynamicExclusion","page":"Home","title":"InflationFunctions.InflationDynamicExclusion","text":"InflationDynamicExclusion <: InflationFunction\n\nFunción para computar la inflación de exclusión dinámica dado el factor inferior (lower_factor) y factor superior (upper_factor).\n\nUtilización\n\nfunction (inflfn::InflationDynamicExclusion)(base::VarCPIBase)\n\nDefine cómo opera InflationDynamicExclusion sobre un objeto de tipo VarCPIBase.\n\nfunction (inflfn::InflationDynamicExclusion)(cs::CountryStructure)\n\nDefine cómo opera InflationDynamicExclusion sobre un objeto de tipo CountryStructure.\n\nEjemplo\n\nCálculo el recorte dinámico simétrico (2, 2) la distribución de variaciones intermensuales ponderadas.\n\njulia> dynExfn = InflationDynamicExclusion(2, 2)\n(::InflationDynamicExclusion) (generic function with 5 methods)\njulia>dynExfn(gtdata) #gtdata es de tipo UniformCountryStructure\n231×1 Matrix{Float32}:\n 7.0480227\n 7.3734045\n 7.6767564\n 7.6933146\n 7.7317834\n ⋮\n 1.0896564\n 1.1332393\n 1.0305643\n 1.1091232\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.InflationExpSmoothing","page":"Home","title":"InflationFunctions.InflationExpSmoothing","text":"InflationExpSmoothing{F <: InflationFunction} <: InflationFunction\n\nFunción de inflación que computa la inflación con decaimiento exponencial con el parámetro `alpha (el parámetro del decaimiento ) de la trayectoria interanual dada por la medida de inflación inflfn almacenada. \n\nEjemplo\n\nPara computar la inflación con decaimiento exponencial de la variación interanual del IPC: \n\njulia> inflfn = InflationExpSmoothing(InflationTotalCPI(), 0.8)\n(::InflationExpSmoothing{InflationTotalCPI}) (generic function with 5 methods)\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.InflationFixedExclusion","page":"Home","title":"InflationFunctions.InflationFixedExclusion","text":"InflationFixedExclusion{N} <: InflationFunction\n\nFunción de inflación para computar la inflación de exclusión fija de gastos básicos para N bases del IPC. Esta versión no utiliza la fórmula del IPC, como la función de inflación InflationFixedExclusionCPI.\n\nUtilización\n\nfunction (inflfn::InflationFixedExclusion)(base::VarCPIBase{T}, i::Int) where T\n\nDefine cómo opera InflationFixedExclusion sobre un objeto de tipo VarCPIBase, con i listas de exclusión de gastos básicos (posiciones en el IPC) para las bases 2000 y 2010.\n\nfunction (inflfn::InflationFixedExclusion)(cs::CountryStructure, ::CPIVarInterm)\n\nDefine cómo opera InflationFixedExclusion sobre un CountryStructure\n\nEjemplos\n\nInstanciamos la función y le damos dos listas de exclusión, una por cada base en el CountryStructure. Se exclyen los gastos básicos con números de columnas [25,30,54,88] del primer VarCPIBase y los gastos básicos [65,95,85] del segundo VarCPIBase.\n\njulia> InfExc = InflationFixedExclusion([25,30,54,88], [65,95,85]) \n(::InflationFixedExclusion{2}) (generic function with 6 methods)\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.InflationFixedExclusionCPI","page":"Home","title":"InflationFunctions.InflationFixedExclusionCPI","text":"InflationFixedExclusionCPI{N} <: InflationFunction\n\nFunción de inflación para computar la inflación de exclusión fija de gastos básicos para N bases del IPC.\n\nUtilización\n\nfunction (inflfn::InflationFixedExclusionCPI)(base::VarCPIBase{T}, i::Int) where T\n\nDefine cómo opera InflationFixedExclusionCPI sobre un objeto de tipo VarCPIBase, con i listas de exclusión de gastos básicos (posiciones en el IPC) para las bases 2000 y 2010.\n\nfunction (inflfn::InflationFixedExclusionCPI)(cs::CountryStructure, ::CPIVarInterm)\n\nDefine cómo opera InflationFixedExclusionCPI sobre un CountryStructure\n\nEjemplos\n\nInstanciamos la función y le damos dos listas de exclusión, una por cada base en el CountryStructure. Se exclyen los gastos básicos con números de columnas [25,30,54,88] del primer VarCPIBase y los gastos básicos [65,95,85] del segundo VarCPIBase.\n\njulia> InfExc = InflationFixedExclusionCPI([25,30,54,88], [65,95,85]) \n(::InflationFixedExclusionCPI{2}) (generic function with 6 methods)\n\nCuando gt00 es un VarCPIBase para la base 2000 y su vector de exclusión es el primero de la lista: \n\njulia> InfExc(gt00, 1) \n120-element Vector{Float32}:\n 1.4066696\n 0.7496357\n 0.5115509\n 0.39703846\n ⋮\n 0.23813248\n 0.27743578\n 0.46629906\n\nCuando gt10 es un VarCPIBase para la base 2010 y su vector de exclusión es el segundo de la lista: \n\njulia> InfExc(gt10, 2)\n\nCuando gtdata es un CountryStructure: \n\njulia> InfExc(gtdata)\n231-element Vector{Float32}:\n 8.727622\n 8.73872\n 8.972383\n 9.031701\n ⋮\n 4.8354387\n 5.24472\n 6.0075045\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.InflationGSEq","page":"Home","title":"InflationFunctions.InflationGSEq","text":"InflationGSEq <: InflationFunction\nInflationGSEq(k, s1, s2)\n\nComputes a Gaussian smoothing with equal weights according to quantile k, left-standard deviation s1, and right-standard deviation s2. The item at the position of the k quantile receives a higher weight and the items to the left or right are downweighted using a Gaussian bell function with different standard deviations to the left and right.\n\nThere are n items in the CPI database of monthly price changes. If p is the index of the desired quantile, the standard deviation is defined by s(x,p) = x <= p ? s1*n : s2*n and the smoothing function by f(x,p) = exp(-(x-p)^2 / s(x,p)^2).\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.InflationGSWeighted","page":"Home","title":"InflationFunctions.InflationGSWeighted","text":"InflationGSWeighted <: InflationFunction\nInflationGSWeighted(k, s1, s2)\n\nComputes a Gaussian smoothing to the weights according to quantile k, left-standard deviation s1, and right-standard deviation s2. The item at the position of the k quantile receives a higher weight and the items to the left or right are downweighted using a Gaussian bell function with different standard deviations to the left and right.\n\nThere are n items in the CPI database of monthly price changes. If p is the index of the desired quantile, the standard deviation is defined by s(x,p) = x <= p ? s1*n : s2*n and the smoothing function by f(x,p) = exp(-(x-p)^2 / s(x,p)^2).\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.InflationMovingAverage","page":"Home","title":"InflationFunctions.InflationMovingAverage","text":"InflationMovingAverage{F <: InflationFunction} <: InflationFunction\n\nFunción de inflación que computa el promedio móvil de k períodos de la trayectoria interanual de la medida de inflación inflfn almacenada. \n\nEjemplo\n\nPara computar la media móvil de 6 meses de la variación interanual del IPC: \n\njulia> inflfn = InflationMovingAverage(InflationTotalCPI(), 6)\n(::InflationMovingAverage{InflationTotalCPI}) (generic function with 5 methods)\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.InflationPercentileEq","page":"Home","title":"InflationFunctions.InflationPercentileEq","text":"InflationPercentileEq <: InflationFunction\n\nFunción de inflación para computar el percentil equiponderado k.\n\nUtilización\n\nfunction (inflfn::InflationPercentileEq)(base::VarCPIBase{T}) where T\n\nDefine cómo opera InflationPercentileEq sobre un objeto de tipo VarCPIBase.\n\nfunction (inflfn::InflationPercentileEq)(cs::CountryStructure)\n\nDefine cómo opera InflationPercentileEq sobre un objeto de tipo CountryStructure.\n\nEjemplo\n\nCálculo del percentil 70 de la distribución de variaciones intermensuales ponderadas\n\njulia> percEqfn = InflationPercentileEq(70)\n(::InflationPercentileEq) (generic function with 5 methods)\njulia>percEqfn(gtdata) #gtdata es de tipo UniformCountryStructure\n231-element Vector{Float32}:\n9.812069\n10.271847\n10.382021\n10.323441\n10.427952 \n⋮\n1.9042492\n1.9850135\n1.9871473\n2.0293117\n2.1856546\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.InflationPercentileEq-Tuple{Int64}","page":"Home","title":"InflationFunctions.InflationPercentileEq","text":"InflationPercentileEq(k::Int) = InflationPercentileEq(k = Float32(k) / 100)\nInflationPercentileEq(q::T) where {T <: AbstractFloat}\n\nPermite utilizar valores de k que no necesariamente son de tipo de punto flotante, como por ejemplo: enteros, fracciones, Float32 y Float64.\n\nEjemplo\n\nSe usa 0.70 en lugar de 70\n\njulia> percEqfn = InflationPercentileEq(0.70)\n(::InflationPercentileEq) (generic function with 5 methods)\n\njulia>percEqfn(gtdata) \n231-element Vector{Float32}:\n9.812069\n10.271847\n10.382021\n10.323441\n10.427952\n⋮\n1.9042492\n1.9850135\n1.9871473\n2.0293117\n2.1856546\n\nSe obtienen los mismos resultados.\n\n\n\n\n\n","category":"method"},{"location":"#InflationFunctions.InflationPercentileWeighted","page":"Home","title":"InflationFunctions.InflationPercentileWeighted","text":"InflationPercentileWeighted <: InflationFunction\n\nFunción de inflación para computar el percentil ponderado k.\n\nUtilización\n\nfunction (inflfn::InflationPercentileWeighted)(base::VarCPIBase{T}) where T\n\nDefine cómo opera InflationPercentileWeighted sobre un objeto de tipo VarCPIBase.\n\nfunction (inflfn::InflationPercentileWeighted)(cs::CountryStructure)\n\nEjemplo\n\nCálculo del percentil 70 de la distribución de variaciones intermensuales ponderadas\n\njulia> percfn = InflationPercentileWeighted(70)\n(::InflationPercentileWeighted) (generic function with 5 methods)\njulia>percfn(gtdata) #gtdata es de tipo UniformCountryStructure\n231-element Vector{Float32}:\n 11.189365\n 11.571873\n 11.738467\n 11.552155\n 11.763763\n  ⋮\n  1.8916845\n  2.074194\n  2.0474315\n  2.1219969\n  2.2268414\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.InflationPercentileWeighted-Tuple{Int64}","page":"Home","title":"InflationFunctions.InflationPercentileWeighted","text":"InflationPercentileWeighted(k::Int) = InflationPercentileWeighted(k = Float32(k) / 100)\nInflationPercentileWeighted(q::T) where {T <: AbstractFloat}\n\nPermite utilizar valores de k que no necesariamente son de tipo de punto flotante, como por ejemplo: enteros, fracciones, Float32 y Float64.\n\nEjemplo\n\nSe usa 0.70 en lugar de 70\n\njulia> percfn = InflationPercentileWeighted(0.70)\n(::InflationPercentileWeighted) (generic function with 5 methods)\n\njulia>percfn(gtdata) \n231-element Vector{Float32}:\n 11.189365\n 11.571873\n 11.738467\n 11.552155\n 11.763763\n  ⋮\n  1.8916845\n  2.074194\n  2.0474315\n  2.1219969\n  2.2268414\n\nSe obtienen los mismos resultados\n\n\n\n\n\n","category":"method"},{"location":"#InflationFunctions.InflationSimpleMean","page":"Home","title":"InflationFunctions.InflationSimpleMean","text":"InflationSimpleMean <: InflationFunction\n\nFunción de inflación para computar la media simple interanual.\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.InflationTrimmedMeanEq","page":"Home","title":"InflationFunctions.InflationTrimmedMeanEq","text":"InflationTrimmedMeanEq <: InflationFunction\n\nFunción de inflación para computar la media truncada equiponderada\n\nUtilización\n\nfunction (inflfn::InflationTrimmedMeanEq)(base::VarCPIBase{T}) where T\n\nDefine cómo opera InflationTrimmedMeanEq sobre un objeto de tipo VarCPIBase.\n\nEjemplo\n\njulia> mtfn = InflationTrimmedMeanEq(25, 75.5)\n(::InflationTrimmedMeanEq) (generic function with 5 methods)\njulia> mtfn(gt00) # gt00 es de tipo VarCPIBase\n120-element Vector{Float32}:\n 1.3350569\n 0.81459785\n 0.5427902\n 0.44377768\n 0.3310551\n 0.6161327\n ⋮\n 0.284297\n 0.20947386\n 0.298732\n 0.25540668\n 0.2260508\n 0.3456037\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.InflationTrimmedMeanEq-Tuple{Real, Real}","page":"Home","title":"InflationFunctions.InflationTrimmedMeanEq","text":"InflationTrimmedMeanEq(l1::Real,l2::Real)\n\nNos permite utilizar recortes que no necesariamente son de tipos de punto flotante, como por ejemplo: enteros, fracciones, Float32 y Float64.\n\nEjemplo:\n\njulia> mtfn = InflationTrimmedMeanEq(25, 75.5)\n(::InflationTrimmedMeanEq) (generic function with 5 methods)\n\n\n\n\n\n","category":"method"},{"location":"#InflationFunctions.InflationTrimmedMeanWeighted","page":"Home","title":"InflationFunctions.InflationTrimmedMeanWeighted","text":"InflationTrimmedMeanWeighted <: InflationFunction\n\nFunción de inflación para computar la media truncada ponderada\n\nUtilización\n\nfunction (inflfn::InflationTrimmedMeanWeighted)(base::VarCPIBase{T}) where T\n\nDefine cómo opera InflationTrimmedMeanWeighted sobre un objeto de tipo VarCPIBase.\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.InflationTrimmedMeanWeighted-Tuple{Real, Real}","page":"Home","title":"InflationFunctions.InflationTrimmedMeanWeighted","text":"InflationTrimmedMeanWeighted(l1::Real,l2::Real)\n\nNos permite utilizar valores que no necesariamente son Float32, como enteros o Float64.\n\nEjemplo:\n\njulia> mtfn = InflationTrimmedMeanWeighted(25,75.5)\n(::InflationTrimmedMeanWeighted) (generic function with 5 methods)\n\n\n\n\n\n","category":"method"},{"location":"#InflationFunctions.InflationWeightedMean","page":"Home","title":"InflationFunctions.InflationWeightedMean","text":"InflationWeightedMean <: InflationFunction\n\nFunción de inflación para computar la media ponderada.\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.MaiF","page":"Home","title":"InflationFunctions.MaiF","text":"MaiF{P} <: AbstractMaiMethod\n\nMaiF(n::Int)\nMaiF(p::AbstractArray)\n\nTipo para englobar la metodología de cómputo de inflación subyacente MAI-F, en la cual se transforma la distribución de ocurrencias (o equiponderada) de variaciones intermensuales utilizando la distribución histórica de variaciones intermensuales ponderadas. \n\nSe proporciona el número de segmentos de normalización, o bien, las posiciones de los cuantiles utilizados para llevar a cabo la transformación. Si se proporcionan las posiciones, la primera y la última posición deben ser el cuantil 0 y 1, respectivamente.\n\nEjemplos\n\nUtilizar los quintiles como puntos de referencia para normalización \n\njulia> method = MaiF(5)\nMaiF{StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}}(5, 0.0:0.2:1.0)\n\nUtilizar tres segmentos de normalización, en el primer y tercer cuartil: \n\njulia> method = MaiF([0, 0.25, 0.75, 1])\nMaiF{Vector{Float64}}(3, [0.0, 0.25, 0.75, 1.0])\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.MaiFP","page":"Home","title":"InflationFunctions.MaiFP","text":"MaiFP{P} <: AbstractMaiMethod\n\nMaiFP(n::Int)\nMaiFP(p::AbstractArray)\n\nTipo para englobar la metodología de cómputo de inflación subyacente MAI-FP, en la cual se transforma la distribución de ocurrencias de variaciones intermensuales utilizando la distribución histórica de variaciones intermensuales equiponderadas. Esta es la versión equivalente a la MAI-G, que utiliza todas las distribuciones de ocurrencias.  \n\nSe proporciona el número de segmentos de normalización, o bien, las posiciones de los cuantiles utilizados para llevar a cabo la transformación. Si se proporcionan las posiciones, la primera y la última posición deben ser el cuantil 0 y 1, respectivamente.\n\nEjemplos\n\nUtilizar los quintiles como puntos de referencia para normalización \n\njulia> method = MaiFP(5)\nMaiFP{StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}}(5, 0.0:0.2:1.0)\n\nUtilizar tres segmentos de normalización, en el primer y tercer cuartil: \n\njulia> method = MaiFP([0, 0.25, 0.75, 1])\nMaiFP{Vector{Float64}}(3, [0.0, 0.25, 0.75, 1.0])\n\n\n\n\n\n","category":"type"},{"location":"#InflationFunctions.MaiG","page":"Home","title":"InflationFunctions.MaiG","text":"MaiG{P} <: AbstractMaiMethod\n\nMaiG(n::Int)\nMaiG(p::AbstractArray)\n\nTipo para englobar la metodología de cómputo de inflación subyacente MAI-G, en la cual se transforma la distribución ponderada de variaciones intermensuales utilizando la distribución histórica de variaciones intermensuales ponderadas. \n\nSe proporciona el número de segmentos de normalización, o bien, las posiciones de los cuantiles utilizados para llevar a cabo la transformación. Si se proporcionan las posiciones, la primera y la última posición deben ser el cuantil 0 y 1, respectivamente.\n\nEjemplos\n\nUtilizar los quintiles como puntos de referencia para normalización \n\njulia> method = MaiG(5)\nMaiG{StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}}(5, 0.0:0.2:1.0)\n\nUtilizar tres segmentos de normalización, en el primer y tercer cuartil: \n\njulia> method = MaiG([0, 0.25, 0.75, 1])\nMaiG{Vector{Float64}}(3, [0.0, 0.25, 0.75, 1.0])\n\n\n\n\n\n","category":"type"},{"location":"#CPIDataBase.measure_name-Tuple{InflationDynamicExclusion}","page":"Home","title":"CPIDataBase.measure_name","text":"measure_name(inflfn::InflationDynamicExclusion)\n\nIndica qué medida se utiliza para una instancia de una función de inflación.\n\nEjemplo\n\njulia> dynExfn = InflationDynamicExclusion(2, 2)\njulia> measure_name(dynExfn)\n\"Inflación de exclusión dinámica (2.0, 2.0)\"\n\n\n\n\n\n","category":"method"},{"location":"#CPIDataBase.measure_name-Tuple{InflationPercentileEq}","page":"Home","title":"CPIDataBase.measure_name","text":"measure_name(inflfn::InflationPercentileEq)\n\nIndica qué medida se utiliza para una instancia de una función de inflación.\n\nEjemplo\n\njulia> percEqfn = InflationPercentileEq(0.70)\njulia> measure_name(percEqfn)\n\"Percentil equiponderado 70.0\"\n\n\n\n\n\n","category":"method"},{"location":"#CPIDataBase.measure_name-Tuple{InflationPercentileWeighted}","page":"Home","title":"CPIDataBase.measure_name","text":"measure_name(inflfn::InflationPercentileWeighted)\n\nIndica qué medida se utiliza para una instancia de una función de inflación.\n\nEjemplo\n\njulia> percfn = InflationPercentileWeighted(0.70)\njulia> measure_name(percfn)\n\"Percentil ponderado 70.0\"\n\n\n\n\n\n","category":"method"},{"location":"#CPIDataBase.measure_name-Tuple{InflationTrimmedMeanEq}","page":"Home","title":"CPIDataBase.measure_name","text":"measure_name(inflfn::InflationTrimmedMeanEq)\n\nNos indica qué medida se utiliza para una instancia de una función de inflación.\n\nEjemplo:\n\njulia> mtfn = InflationTrimmedMeanEq(15.5,75.5)\njulia> measure_name(mtfn) \n\"Media Truncada Equiponderada (15.5 , 75.5)\"\n\n\n\n\n\n","category":"method"},{"location":"#CPIDataBase.measure_name-Tuple{InflationTrimmedMeanWeighted}","page":"Home","title":"CPIDataBase.measure_name","text":"measure_name(inflfn::InflationTrimmedMeanWeighted)\n\nNos indica qué medida se utiliza para una instancia de una función de inflación.\n\nEjemplo:\n\njulia> mtfn = InflationTrimmedMeanWeighted(15.5,75.5)\njulia> measure_name(mtfn)\n\"Media Truncada Ponderada (15.5 , 75.5)\"\n\n\n\n\n\n","category":"method"}]
}
